import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

String _appTheme = "primary";

/// Helper class for managing themes and colors.
class ThemeHelper {
  // A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.black900,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: appTheme.indigo40002,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(17.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      floatingActionButtonTheme: FloatingActionButtonThemeData(
        backgroundColor: appTheme.black900.withOpacity(0.5),
      ),
      dividerTheme: DividerThemeData(
        thickness: 3,
        space: 3,
        color: colorScheme.onPrimaryContainer.withOpacity(1),
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: appTheme.gray90005.withOpacity(0.64),
          fontSize: 16.fSize,
          fontFamily: 'Product Sans',
          fontWeight: FontWeight.w400,
        ),
        bodyMedium: TextStyle(
          color: appTheme.gray90005.withOpacity(0.64),
          fontSize: 14.fSize,
          fontFamily: 'Product Sans',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: colorScheme.onPrimaryContainer.withOpacity(1),
          fontSize: 12.fSize,
          fontFamily: 'Product Sans',
          fontWeight: FontWeight.w400,
        ),
        displayLarge: TextStyle(
          color: colorScheme.onPrimaryContainer.withOpacity(1),
          fontSize: 64.fSize,
          fontFamily: 'HW-digit',
          fontWeight: FontWeight.w700,
        ),
        displayMedium: TextStyle(
          color: colorScheme.onPrimaryContainer.withOpacity(1),
          fontSize: 40.fSize,
          fontFamily: 'Product Sans',
          fontWeight: FontWeight.w400,
        ),
        displaySmall: TextStyle(
          color: colorScheme.onPrimaryContainer.withOpacity(1),
          fontSize: 35.fSize,
          fontFamily: 'Product Sans',
          fontWeight: FontWeight.w400,
        ),
        headlineLarge: TextStyle(
          color: colorScheme.onPrimaryContainer.withOpacity(1),
          fontSize: 32.fSize,
          fontFamily: 'Product Sans',
          fontWeight: FontWeight.w400,
        ),
        headlineMedium: TextStyle(
          color: appTheme.gray90005.withOpacity(0.64),
          fontSize: 26.fSize,
          fontFamily: 'Product Sans',
          fontWeight: FontWeight.w400,
        ),
        headlineSmall: TextStyle(
          color: colorScheme.onPrimaryContainer.withOpacity(1),
          fontSize: 24.fSize,
          fontFamily: 'Urbanist',
          fontWeight: FontWeight.w600,
        ),
        labelLarge: TextStyle(
          color: appTheme.black900,
          fontSize: 13.fSize,
          fontFamily: 'Urbanist',
          fontWeight: FontWeight.w600,
        ),
        labelMedium: TextStyle(
          color: appTheme.pinkA100,
          fontSize: 11.fSize,
          fontFamily: 'Product Sans',
          fontWeight: FontWeight.w700,
        ),
        titleLarge: TextStyle(
          color: colorScheme.onPrimaryContainer.withOpacity(1),
          fontSize: 20.fSize,
          fontFamily: 'Product Sans',
          fontWeight: FontWeight.w400,
        ),
        titleMedium: TextStyle(
          color: colorScheme.onPrimaryContainer.withOpacity(1),
          fontSize: 16.fSize,
          fontFamily: 'Urbanist',
          fontWeight: FontWeight.w600,
        ),
        titleSmall: TextStyle(
          color: colorScheme.onPrimaryContainer.withOpacity(1),
          fontSize: 14.fSize,
          fontFamily: 'Product Sans',
          fontWeight: FontWeight.w700,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XB7A1D7FD),
    primaryContainer: Color(0XFF3D3D3D),
    secondaryContainer: Color(0XFFFFD05A),

    // Error colors
    errorContainer: Color(0XFFFF7070),
    onError: Color(0XFFF6DF77),
    onErrorContainer: Color(0X7218113E),

    // On colors(text colors)
    onPrimary: Color(0XFF272727),
    onPrimaryContainer: Color(0X49FFFFFF),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Amber
  Color get amber300 => Color(0XFFFFD74A);

  // Black
  Color get black900 => Color(0XFF000000);
  Color get black90072 => Color(0X720C1708);
  Color get black9007201 => Color(0X7206170D);

  // Blue
  Color get blue100 => Color(0XFFB4DDFF);
  Color get blue200 => Color(0XFF91D7FF);
  Color get blue400 => Color(0XFF30A5E6);
  Color get blue40001 => Color(0XFF4B96CC);
  Color get blue50 => Color(0XFFD8E5FF);
  Color get blue500 => Color(0XFF0E90FE);
  Color get blue50001 => Color(0XFF238AFF);
  Color get blue5001 => Color(0XFFECF9FF);
  Color get blue5002 => Color(0XFFEEF4FE);
  Color get blue5003 => Color(0XFFD9E6FF);
  Color get blue700 => Color(0XFF3677D9);
  Color get blueA200 => Color(0XFF4991FF);
  Color get blueA400 => Color(0XFF2486FF);
  Color get blueA700 => Color(0XFF086AFE);

  // BlueB
  Color get blue50B7 => Color(0XB7DFF1FF);

  // BlueGray
  Color get blueGray100 => Color(0XFFD5D5D7);
  Color get blueGray10001 => Color(0XFFD9D9D9);
  Color get blueGray10002 => Color(0XFFCDCDCD);
  Color get blueGray10019 => Color(0X19C3DBDD);
  Color get blueGray20019 => Color(0X19A2CBCD);
  Color get blueGray50 => Color(0XFFEFF0F4);
  Color get blueGray5001 => Color(0XFFEAF6F3);
  Color get blueGray600 => Color(0XFF4B6E82);
  Color get blueGray60001 => Color(0XFF426A7D);
  Color get blueGray60002 => Color(0XFF5B717E);
  Color get blueGray60003 => Color(0XFF62737C);
  Color get blueGray700 => Color(0XFF515151);
  Color get blueGray70001 => Color(0XFF4F4F59);
  Color get blueGray70075 => Color(0X75345B5D);
  Color get blueGray800 => Color(0XFF482564);
  Color get blueGray900 => Color(0XFF303030);
  Color get blueGray90001 => Color(0XFF2F3034);
  Color get blueGray90002 => Color(0XFF2C373D);
  Color get blueGray90003 => Color(0XFF2F2F2F);
  Color get blueGray90004 => Color(0XFF123048);
  Color get blueGray90005 => Color(0XFF2D2D2D);
  Color get blueGray90072 => Color(0X72201442);

  // Cyan
  Color get cyan50 => Color(0XFFD9FCFF);
  Color get cyan700 => Color(0XFF0690A8);
  Color get cyan900 => Color(0XFF035277);

  // Cyanc
  Color get cyan9000c => Color(0X0C00557D);

  // DeepOrange
  Color get deepOrange200 => Color(0XFFFFB6A3);
  Color get deepOrange300 => Color(0XFFFF8656);
  Color get deepOrange800 => Color(0XFFC14923);

  // DeepPurple
  Color get deepPurple5072 => Color(0X72ECD9FF);
  Color get deepPurpleA100 => Color(0XFFB394F4);

  // Gray
  Color get gray100 => Color(0XFFF7F7F7);
  Color get gray10001 => Color(0XFFF5F2FD);
  Color get gray10002 => Color(0XFFF8F4F5);
  Color get gray200 => Color(0XFFEAEAEA);
  Color get gray400 => Color(0XFFBEBEBE);
  Color get gray50 => Color(0XFFF9FAFE);
  Color get gray500 => Color(0XFF9A999E);
  Color get gray50019 => Color(0X1999A69B);
  Color get gray5001 => Color(0XFFF9F9F9);
  Color get gray5002 => Color(0XFFFCECFF);
  Color get gray5003 => Color(0XFFFAFAFA);
  Color get gray600 => Color(0XFF937A52);
  Color get gray60001 => Color(0XFF6B6B6B);
  Color get gray60002 => Color(0XFF6C6C6C);
  Color get gray60003 => Color(0XFFA96D51);
  Color get gray60004 => Color(0XFF7C7C7C);
  Color get gray60033 => Color(0X337A7A7A);
  Color get gray700 => Color(0XFF5A5A5A);
  Color get gray70001 => Color(0XFF686467);
  Color get gray70002 => Color(0XFF605E63);
  Color get gray800 => Color(0XFF553B3B);
  Color get gray80001 => Color(0XFF444444);
  Color get gray80002 => Color(0XFF503351);
  Color get gray80003 => Color(0XFF6D3D26);
  Color get gray80004 => Color(0XFF3F3F3F);
  Color get gray80005 => Color(0XFF4C4C4C);
  Color get gray80006 => Color(0XFF474747);
  Color get gray80007 => Color(0XFF592E14);
  Color get gray80008 => Color(0XFF404040);
  Color get gray80009 => Color(0XFF464646);
  Color get gray80010 => Color(0XFF3B3B3B);
  Color get gray900 => Color(0XFF0E111F);
  Color get gray90001 => Color(0XFF191919);
  Color get gray90002 => Color(0XFF1C1B1F);
  Color get gray90003 => Color(0XFF181B18);
  Color get gray90004 => Color(0XFF001826);
  Color get gray90005 => Color(0XFF051522);
  Color get gray90006 => Color(0XFF171719);
  Color get gray90007 => Color(0XFF3D1333);
  Color get gray90059 => Color(0X591E1E1E);
  Color get gray90072 => Color(0X72200D14);
  Color get gray900A3 => Color(0XA3171123);

  // GrayB
  Color get gray50B2 => Color(0XB2F4FDFF);

  // Graye
  Color get gray6001e => Color(0X1E7F7F7F);

  // Grayf
  Color get gray9000f => Color(0X0F13123C);

  // Grayc
  Color get gray9001c => Color(0X1C3C1233);

  // Green
  Color get green400 => Color(0XFF7DB664);

  // Indigo
  Color get indigo400 => Color(0XFF6C6CC0);
  Color get indigo40001 => Color(0XFF6D6EC1);
  Color get indigo40002 => Color(0XFF3E88C5);
  Color get indigo40019 => Color(0X196E6DC1);
  Color get indigoA100 => Color(0XFF8F90F4);

  // LightBlueB
  Color get lightBlue100B2 => Color(0XB29FDCFF);

  // LightBlue
  Color get lightBlue300 => Color(0XFF4ABDFF);
  Color get lightBlue400 => Color(0XFF1BA8FF);
  Color get lightBlue50 => Color(0XFFD6F2FF);
  Color get lightBlue500 => Color(0XFF00A3FF);
  Color get lightBlueA700 => Color(0XFF0084FF);

  // LightGreen
  Color get lightGreen300 => Color(0XFFC2B08A);
  Color get lightGreen40019 => Color(0X198ABE6E);
  Color get lightGreen50 => Color(0XFFEFF6EC);
  Color get lightGreen5001 => Color(0XFFEEF8E1);
  Color get lightGreen5033 => Color(0X33EAFFD9);
  Color get lightGreen700 => Color(0XFF60914A);

  // Lime
  Color get lime200 => Color(0XFFDFCE9B);

  // Orange
  Color get orange300 => Color(0XFFFFAC62);
  Color get orange700 => Color(0XFFFF7A00);

  // Pink
  Color get pink100 => Color(0XFFE5A5D3);
  Color get pink10001 => Color(0XFFE5C1CB);
  Color get pink200 => Color(0XFFE886A7);
  Color get pink300 => Color(0XFFF56A7F);
  Color get pink50033 => Color(0X33FF0098);
  Color get pink5033 => Color(0X33FFD9E2);
  Color get pinkA100 => Color(0XFFEC63C0);
  Color get pinkA10001 => Color(0XFFEB63C1);
  Color get pinkA70033 => Color(0X33BD2D7C);

  // Purple
  Color get purple300 => Color(0XFFC06CB1);
  Color get purple60033 => Color(0X339D3A8A);

  // Red
  Color get red300 => Color(0XFFBB6784);
  Color get red400 => Color(0XFFE5615F);
  Color get red50 => Color(0XFFFCF0F3);
  Color get redA200 => Color(0XFFFD5A5A);
  Color get redA20001 => Color(0XFFFB5152);
  Color get redA400 => Color(0XFFFF1F1F);

  // Teal
  Color get teal100 => Color(0XFFA2DBCE);
  Color get teal300 => Color(0XFF39BAA4);

  // Yellow
  Color get yellow100 => Color(0XFFFFF8BE);
  Color get yellow700 => Color(0XFFFFBA1E);
  Color get yellowA400 => Color(0XFFFFE500);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
